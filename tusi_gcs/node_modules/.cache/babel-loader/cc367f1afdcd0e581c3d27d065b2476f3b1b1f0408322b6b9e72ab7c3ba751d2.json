{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ehdan\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uCE74\\uCE74\\uC624\\uD1A1 \\uBC1B\\uC740 \\uD30C\\uC77C\\\\TUSI GCS\\\\TUSI GCS\\\\tusi_gcs\\\\src\\\\front\\\\LaunchState.js\",\n  _s = $RefreshSig$();\nimport './Frame.css';\nimport './LaunchState.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LaunchState() {\n  _s();\n  const [launchstate, setStage] = useState('LOADING');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/stage');\n        const responseData = await response.json();\n        //setDataFromServer(responseData.data);\n        console.log('Data from server:', responseData.state);\n        setStage(responseData.state[0]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // 초기 로딩 시 데이터 가져오기\n    fetchData();\n\n    // 5초마다 데이터를 가져오도록 설정\n    const interval = setInterval(fetchData, 1000); // 5000ms = 5초\n\n    // 컴포넌트가 언마운트 될 때 clearInterval로 interval 정리\n    return () => clearInterval(interval);\n  }, []);\n  const handleConnect = async () => {\n    try {\n      const response = await fetch('/nextStage');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FrameTitle\",\n      children: \"Launch State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Launch_State\",\n      children: launchstate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NextStageBtnDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"NextStageBtn\",\n        onClick: handleConnect,\n        children: \"Next Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s(LaunchState, \"1vTTKWJHXOu6AHTzDCuZfexg0vg=\");\n_c = LaunchState;\nexport default LaunchState;\nvar _c;\n$RefreshReg$(_c, \"LaunchState\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LaunchState","_s","launchstate","setStage","fetchData","response","fetch","responseData","json","console","log","state","error","interval","setInterval","clearInterval","handleConnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ehdan/OneDrive/문서/카카오톡 받은 파일/TUSI GCS/TUSI GCS/tusi_gcs/src/front/LaunchState.js"],"sourcesContent":["import './Frame.css';\r\nimport './LaunchState.css'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction LaunchState(){\r\n  const [launchstate, setStage] = useState('LOADING');\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/stage');\r\n            const responseData = await response.json();\r\n            //setDataFromServer(responseData.data);\r\n            console.log('Data from server:', responseData.state);\r\n\r\n            setStage(responseData.state[0]);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    // 초기 로딩 시 데이터 가져오기\r\n        fetchData();\r\n\r\n        // 5초마다 데이터를 가져오도록 설정\r\n        const interval = setInterval(fetchData, 1000); // 5000ms = 5초\r\n\r\n        // 컴포넌트가 언마운트 될 때 clearInterval로 interval 정리\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const handleConnect = async () => {\r\n      try {\r\n        const response = await fetch('/nextStage');\r\n      } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n   \r\n    return (\r\n      <div className=\"Frame\">\r\n        <div className = \"FrameTitle\">Launch State</div>\r\n        <div className = \"Launch_State\">\r\n            {launchstate}\r\n        </div>\r\n        <div className=\"NextStageBtnDiv\">\r\n          <button className=\"NextStageBtn\" onClick={handleConnect}>Next Stage</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n \r\nexport default LaunchState;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,SAAS,CAAC;EACnDD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;QACtC,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC1C;QACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,YAAY,CAACI,KAAK,CAAC;QAEpDR,QAAQ,CAACI,YAAY,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;;IAED;IACIR,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMS,QAAQ,GAAGC,WAAW,CAACV,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;;IAE/C;IACA,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC5C,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBnB,OAAA;MAAKkB,SAAS,EAAG,YAAY;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChDvB,OAAA;MAAKkB,SAAS,EAAG,cAAc;MAAAC,QAAA,EAC1BhB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNvB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BnB,OAAA;QAAQkB,SAAS,EAAC,cAAc;QAACM,OAAO,EAAEP,aAAc;QAAAE,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA7CMD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA+CpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}