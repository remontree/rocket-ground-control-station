{"ast":null,"code":"var _jsxFileName = \"/home/remon/\\uBC14\\uD0D5\\uD654\\uBA74/gcs test/TUSI GCS/TUSI GCS/tusi_gcs/src/front/LaunchState.js\",\n  _s = $RefreshSig$();\nimport './Frame.css';\nimport './LaunchState.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LaunchState() {\n  _s();\n  const [launchstate, setStage] = useState('LOADING');\n  useEffect(() => {\n    // SSE 연결\n    const eventSource = new EventSource('http://127.0.0.1:5000/stream/stage');\n    eventSource.onmessage = event => {\n      try {\n        const responseData = JSON.parse(event.data);\n        console.log('Data from server:', responseData); // 서버 데이터 확인\n\n        // 'state' 대신 다른 키를 사용한 예시: responseData.stage\n        if (Array.isArray(responseData.stage) && responseData.stage.length > 0) {\n          setStage(responseData.stage[0]);\n        } else {\n          console.error('Invalid data format: stage is missing or not an array');\n          setStage('ERROR');\n        }\n      } catch (error) {\n        console.error('Error parsing SSE data:', error);\n        setStage('ERROR');\n      }\n    };\n    eventSource.onerror = error => {\n      console.error('SSE Error:', error);\n      setStage('ERROR'); // 오류 발생 시 상태를 ERROR로 표시\n      eventSource.close();\n    };\n\n    // Cleanup\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  const handleConnect = async () => {\n    try {\n      await fetch('/nextStage'); // 서버에 Next Stage 명령 전송\n    } catch (error) {\n      console.error('Error sending Next Stage request:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FrameTitle\",\n      children: \"Launch State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Launch_State\",\n      children: launchstate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NextStageBtnDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"NextStageBtn\",\n        onClick: handleConnect,\n        children: \"Next Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(LaunchState, \"1vTTKWJHXOu6AHTzDCuZfexg0vg=\");\n_c = LaunchState;\nexport default LaunchState;\nvar _c;\n$RefreshReg$(_c, \"LaunchState\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LaunchState","_s","launchstate","setStage","eventSource","EventSource","onmessage","event","responseData","JSON","parse","data","console","log","Array","isArray","stage","length","error","onerror","close","handleConnect","fetch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/remon/바탕화면/gcs test/TUSI GCS/TUSI GCS/tusi_gcs/src/front/LaunchState.js"],"sourcesContent":["import './Frame.css';\r\nimport './LaunchState.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction LaunchState() {\r\n  const [launchstate, setStage] = useState('LOADING');\r\n\r\n  useEffect(() => {\r\n    // SSE 연결\r\n    const eventSource = new EventSource('http://127.0.0.1:5000/stream/stage');\r\n\r\n    eventSource.onmessage = (event) => {\r\n      try {\r\n        const responseData = JSON.parse(event.data);\r\n        console.log('Data from server:', responseData); // 서버 데이터 확인\r\n\r\n        // 'state' 대신 다른 키를 사용한 예시: responseData.stage\r\n        if (Array.isArray(responseData.stage) && responseData.stage.length > 0) {\r\n          setStage(responseData.stage[0]);\r\n        } else {\r\n          console.error('Invalid data format: stage is missing or not an array');\r\n          setStage('ERROR');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing SSE data:', error);\r\n        setStage('ERROR');\r\n      }\r\n    };\r\n\r\n    eventSource.onerror = (error) => {\r\n      console.error('SSE Error:', error);\r\n      setStage('ERROR'); // 오류 발생 시 상태를 ERROR로 표시\r\n      eventSource.close();\r\n    };\r\n\r\n    // Cleanup\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, []);\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      await fetch('/nextStage'); // 서버에 Next Stage 명령 전송\r\n    } catch (error) {\r\n      console.error('Error sending Next Stage request:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Frame\">\r\n      <div className=\"FrameTitle\">Launch State</div>\r\n      <div className=\"Launch_State\">{launchstate}</div>\r\n      <div className=\"NextStageBtnDiv\">\r\n        <button className=\"NextStageBtn\" onClick={handleConnect}>Next Stage</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LaunchState;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,SAAS,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,WAAW,GAAG,IAAIC,WAAW,CAAC,oCAAoC,CAAC;IAEzED,WAAW,CAACE,SAAS,GAAIC,KAAK,IAAK;MACjC,IAAI;QACF,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QAC3CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,YAAY,CAAC,CAAC,CAAC;;QAEhD;QACA,IAAIM,KAAK,CAACC,OAAO,CAACP,YAAY,CAACQ,KAAK,CAAC,IAAIR,YAAY,CAACQ,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;UACtEd,QAAQ,CAACK,YAAY,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,MAAM;UACLJ,OAAO,CAACM,KAAK,CAAC,uDAAuD,CAAC;UACtEf,QAAQ,CAAC,OAAO,CAAC;QACnB;MACF,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/Cf,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAACe,OAAO,GAAID,KAAK,IAAK;MAC/BN,OAAO,CAACM,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClCf,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACnBC,WAAW,CAACgB,KAAK,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,OAAO,MAAM;MACXhB,WAAW,CAACgB,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBzB,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9C7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEtB;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjD7B,OAAA;MAAKwB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BzB,OAAA;QAAQwB,SAAS,EAAC,cAAc;QAACM,OAAO,EAAER,aAAc;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAtDQD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAwDpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}