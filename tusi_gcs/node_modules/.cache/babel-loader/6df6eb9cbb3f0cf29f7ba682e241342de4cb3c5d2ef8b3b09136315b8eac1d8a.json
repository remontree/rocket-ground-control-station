{"ast":null,"code":"var _jsxFileName = \"/home/remon/\\uBC14\\uD0D5\\uD654\\uBA74/gcs test/TUSI GCS/TUSI GCS/tusi_gcs/src/front/Radio.js\",\n  _s = $RefreshSig$();\nimport './Frame.css';\nimport './Radio.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Radio() {\n  _s();\n  const [ports, setPorts] = useState([]);\n  const [selectedPort, setSelectedPort] = useState('');\n  const [baudRate, setBaudRate] = useState('9600'); // 기본값으로 9600 설정\n\n  useEffect(() => {\n    // 서버에서 사용 가능한 포트 목록을 가져오는 함수\n    fetch(\"/getAvaliablePorts\").then(res => res.json()).then(data => {\n      // 서버에서 받은 데이터를 상태로 설정\n      setPorts(data.ports);\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handleConnect = async () => {\n    console.log('Selected Port:', selectedPort); // 디버깅용 콘솔 출력\n    console.log('Selected Baud Rate:', baudRate);\n    try {\n      const response = await fetch('/connectPort', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          port: selectedPort,\n          baudRate: baudRate\n        })\n      });\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FrameTitle\",\n      children: \"Radio Setting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PortSetting\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingParam\",\n        children: \"Port:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"ComboBox\",\n          value: selectedPort,\n          onChange: e => {\n            console.log('Selected port2:', e.target.value);\n            setSelectedPort(e.target.value);\n          },\n          children: ports.map(port => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: port,\n            children: port\n          }, port, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingParam\",\n        children: \"Baud Rate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"ComboBox\",\n          value: baudRate,\n          onChange: e => setBaudRate(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"9600\",\n            children: \"9600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"115200\",\n            children: \"115200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConnectBtnDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ConnectBtn\",\n        onClick: handleConnect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(Radio, \"+6o5+EdPE0IVxyY0CDt3308Og68=\");\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Radio","_s","ports","setPorts","selectedPort","setSelectedPort","baudRate","setBaudRate","fetch","then","res","json","data","console","log","catch","error","handleConnect","response","method","headers","body","JSON","stringify","port","responseData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["/home/remon/바탕화면/gcs test/TUSI GCS/TUSI GCS/tusi_gcs/src/front/Radio.js"],"sourcesContent":["import './Frame.css';\r\nimport './Radio.css'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Radio() {\r\n    const [ports, setPorts] = useState([]);\r\n    const [selectedPort, setSelectedPort] = useState('');\r\n    const [baudRate, setBaudRate] = useState('9600'); // 기본값으로 9600 설정\r\n  \r\n    useEffect(() => {\r\n      // 서버에서 사용 가능한 포트 목록을 가져오는 함수\r\n      fetch(\"/getAvaliablePorts\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          // 서버에서 받은 데이터를 상태로 설정\r\n          setPorts(data.ports);\r\n          console.log(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data:', error);\r\n        });\r\n    }, []);\r\n  \r\n    const handleConnect = async () => {\r\n      console.log('Selected Port:', selectedPort);  // 디버깅용 콘솔 출력\r\n      console.log('Selected Baud Rate:', baudRate);\r\n      try {\r\n        const response = await fetch('/connectPort', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ port: selectedPort, baudRate: baudRate })\r\n        });\r\n        const responseData = await response.json();\r\n        console.log('Server response:', responseData);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"Frame\">\r\n        <div className=\"FrameTitle\">Radio Setting</div>\r\n        <div className=\"PortSetting\">\r\n          <div className=\"settingParam\">Port:</div>\r\n          <div>\r\n            <select\r\n              className=\"ComboBox\"\r\n              value={selectedPort}\r\n              onChange={(e) => {\r\n                console.log('Selected port2:', e.target.value);\r\n                setSelectedPort(e.target.value)}}\r\n            >\r\n              {ports.map(port => (\r\n                <option key={port} value={port}>{port}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"settingParam\">Baud Rate:</div>\r\n          <div>\r\n            <select\r\n              className=\"ComboBox\"\r\n              value={baudRate}\r\n              onChange={(e) => setBaudRate(e.target.value)}\r\n            >\r\n              <option value=\"9600\">9600</option>\r\n              <option value=\"115200\">115200</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"ConnectBtnDiv\">\r\n          <button className=\"ConnectBtn\" onClick={handleConnect}>Connect</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Radio"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}